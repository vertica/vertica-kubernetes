# (c) Copyright [2021] Micro Focus or one of its affiliates.
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: kuttl.dev/v1beta1
kind: TestSuite
testDirs:
  - tests/e2e
parallel: 2
timeout: 600
commands:
  # Create the kustomize overlay files to set the image to use.
  - command: tests/create-kustomize-overlay.sh $VERTICA_IMG $VLOGGER_IMG

  # make dependencies
  - command: make helm-create-resources vdb-gen install-cert-manager

  # We do a pre-pull of the vertica-k8s image to avoid timeouts
  # during the test run.
  - command: kubectl delete pod vertica-k8s-image-pull
    namespaced: true
    ignoreFailure: true
  - command: bash -c "kustomize build tests/manifests/image-pull/overlay | kubectl -n $NAMESPACE apply -f - "
  - command: kubectl wait --for=condition=Ready pod --timeout=10m vertica-k8s-image-pull
    namespaced: true
  - command: kubectl delete pod vertica-k8s-image-pull
    namespaced: true

  # We do a pre-pull of the vertica-k8s image version latest and 10.1.1-0
  # that we will use for the test upgrade-vertica.
  - command: bash -c "sed 's+kustomize-vertica-image+vertica/vertica-k8s:11.0.0-0-minimal+g' tests/manifests/image-pull/base/vertica-k8s-image-pull.yaml | kubectl -n $NAMESPACE apply -f - "
  - command: kubectl wait --for=condition=Ready pod --timeout=10m vertica-k8s-image-pull
    namespaced: true
  - command: kubectl delete pod vertica-k8s-image-pull
    namespaced: true
  - command: bash -c "sed 's+kustomize-vertica-image+vertica/vertica-k8s:latest+g' tests/manifests/image-pull/base/vertica-k8s-image-pull.yaml | kubectl -n $NAMESPACE apply -f - "
  - command: kubectl wait --for=condition=Ready pod --timeout=10m vertica-k8s-image-pull
    namespaced: true
  - command: kubectl delete pod vertica-k8s-image-pull
    namespaced: true

  # Setup a minio tenant for use with all testcases.  Each testcase is still
  # responsible for creating and destroying their own bucket.  Use the following
  # endpoint to access this tenant: https://minio.kuttl-e2e-communal
  - command: kubectl delete namespace kuttl-e2e-communal
    ignoreFailure: true
  - command: kubectl create namespace kuttl-e2e-communal
  - command: kubectl krew update
  - command: kubectl krew install minio
  # If these images ever change, they must be updated in tests/external-images.txt
  - command: kubectl minio init --console-image minio/console:v0.6.3 --image minio/operator:v4.0.2
  - command: kubectl apply -f tests/manifests/minio/01-creds.yaml -n kuttl-e2e-communal
  - command: kubectl apply -f tests/manifests/minio/02-tenant.yaml -n kuttl-e2e-communal
  - command: scripts/wait-for-minio.sh -n kuttl-e2e-communal

  # We use stern to collect the pod output of any test that creates a pod with
  # the 'stern=include' label.  By default, the output of this is stored in a
  # file in int-tests-output/
  - command: scripts/save-ancillary-logs.sh
    background: true

  # We have another stern to collect the output for all of the operators.  By
  # default, the output of this is stored in a file in int-tests-output/
  - script: scripts/save-operator-logs.sh
    background: true

  # And another stern to collect the output from any vertica pods.  By default,
  # this stores it in a file in int-tests-output/
  - script: scripts/save-vertica-logs.sh
    background: true
