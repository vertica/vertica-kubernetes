name: e2e (udx) tests

on: 
  workflow_call:
    inputs:
      vlogger-image:
        type: string
        required: false
      operator-image:
        type: string
        required: false
      vertica-image:
        type: string
        required: false
      vertica-deployment-method:
        type: string
        required: false
    secrets:
      DOCKERHUB_USERNAME:
        description: 'When working with images from docker.io, this is the username for login purposes'
        required: true
      DOCKERHUB_TOKEN:
        description: 'When working with images from docker.io, this is the password for login purposes'
        required: true
  workflow_dispatch:
    inputs:
      vlogger-image:
        description: 'Name of the vertica logger image'
        type: string
        required: false
      operator-image:
        description: 'Name of the operator image'
        type: string
        required: false
      vertica-image:
        description: 'Name of the vertica server image'
        type: string
        required: false
      vertica-deployment-method:
        description: 'Vertica deployment method'
        type: choice
        required: false
        default: admintools
        options:
        - admintools
        - vclusterops

jobs:

  test:

    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v3

    - name: Set up e2e environment
      uses: ./.github/actions/setup-e2e

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      if: ${{ startsWith(inputs.vertica-image, 'docker.io') }}
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Run e2e tests
      run: |
        export VERTICA_IMG=${{ inputs.vertica-image }}
        export OPERATOR_IMG=${{ inputs.operator-image }}
        export VLOGGER_IMG=${{ inputs.vlogger-image }}
        export E2E_TEST_DIRS=tests/e2e-udx
        export VERTICA_DEPLOYMENT_METHOD=${{ inputs.vertica-deployment-method }}
        export NMA_RUNNING_MODE=sidecar
        # Setup the udx environment by compiling examples in the vertica image.
        # This downloads packages, so to improve its reliability we retry in
        # case any intermittent network issues arise.
        for i in $(seq 1 5); do scripts/setup-e2e-udx.sh $VERTICA_IMG rockylinux:8 && s=0 && break || s=$? && sleep 60; done
        if [[ $s != "0" ]]
        then
          echo "*** Give up trying to setup the udx env"
          exit 1
        fi
        scripts/run-k8s-int-tests.sh -s -e tests/external-images-s3-ci.txt

    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: logs-e2e-udx-${{ inputs.vertica-deployment-method }}
        path: ${{ github.workspace }}/int-tests-output/*

