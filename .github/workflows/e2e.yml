name: e2e tests

on: 
  push:
    branches: [main, vnext]
  pull_request:
  workflow_dispatch:
    inputs:
      operator_image:
        description: 'Name of an existing operator image. Leave blank to build one with the default name'
        type: string
        required: false
      full_vertica_image:
        description: 'Name of an existing full vertica v2 image. Leave blank to build one with the default name'
        type: string
        required: false
      minimal_vertica_image:
        description: 'Name of an existing minimal vertica v2 image. Leave blank to build one with the default name'
        type: string
        required: false
      legacy_vertica_image:
        description: 'Name of an existing full image with admintools and SSH support. Leave blank to build one with the default name'
        type: string
        required: false
      vlogger_image:
        description: 'Name of an existing vlogger image. Leave blank to build oe with the default name'
        type: string
        required: false
      e2e_test_suites:
        description: 'E2E test suites to run'
        required: false
        type: choice
        default: all
        options:
        - all
        - none
        - admintools leg 1 
        - admintools leg 2
        - admintools leg 3
        - admintools leg 4
        - admintools leg 5
        - admintools server upgrade
        - admintools operator upgrade
        - admintools udx
        - vcluster leg 1
        - vcluster leg 2
        - vcluster leg 3
        - vcluster leg 4
        - vcluster leg 5
        - vcluster leg 6
        - vcluster udx
      run_security_scan:
        description: 'What images to scan?'
        type: choice
        default: 'all, except vertica server'
        options:
        - all
        - none
        - all, except vertica server
      build_release_assets:
        description: 'Build the release assets?'
        type: choice
        options:
        - all
        - none
        default: all
        required: false
      reason:
        description: 'Descriptive name of the workflow run'
        required: false
        default: ''

run-name: ${{ inputs.reason }}

jobs:
  build:
    uses: ./.github/workflows/build-images.yml
    with:
      vlogger_image: ${{ inputs.vlogger_image }}
      operator_image: ${{ inputs.operator_image }}
      minimal_vertica_image: ${{ inputs.minimal_vertica_image }}
      full_vertica_image: ${{ inputs.full_vertica_image }}
      legacy_vertica_image: ${{ inputs.legacy_vertica_image }}
      run_security_scan: ${{ inputs.run_security_scan }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  unittests:
    uses: ./.github/workflows/unittests.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  scorecardtests:
    uses: ./.github/workflows/scorecardtests.yml

  build-release-assets:
    uses: ./.github/workflows/build-release-assets.yml
    if: ${{ inputs.build_release_assets == 'all' || inputs.build_release_assests == '' }}

  e2e-leg-1-admintools:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools leg 1' || inputs.e2e_test_suites == '' }}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-1.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
      vertica-deployment-method: admintools
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-1-vcluster:
    if: ${{ ! github.event.pull_request.head.repo.fork  && (inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'vcluster leg 1' || inputs.e2e_test_suites == '')}}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-1.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.full-vertica-image }}
      vertica-deployment-method: vclusterops
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-2-admintools:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools leg 2' || inputs.e2e_test_suites == '' }}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-2.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
      vertica-deployment-method: admintools
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-2-vcluster:
    if: ${{ ! github.event.pull_request.head.repo.fork  && (inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'vcluster leg 2' || inputs.e2e_test_suites == '')}}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-2.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.minimal-vertica-image }}
      vertica-deployment-method: vclusterops
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-3-admintools:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools leg 3' || inputs.e2e_test_suites == '' }}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-3.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
      vertica-deployment-method: admintools
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  
  e2e-leg-3-vcluster:
    if: ${{ ! github.event.pull_request.head.repo.fork  && (inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'vcluster leg 3' || inputs.e2e_test_suites == '')}}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-3.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.full-vertica-image }}
      vertica-deployment-method: vclusterops
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-4-admintools:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools leg 4' || inputs.e2e_test_suites == '' }}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-4.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
      vertica-deployment-method: admintools
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  
  e2e-leg-4-vcluster:
    if: ${{ ! github.event.pull_request.head.repo.fork  && (inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'vcluster leg 4' || inputs.e2e_test_suites == '')}}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-4.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.minimal-vertica-image }}
      vertica-deployment-method: vclusterops
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-5-admintools:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools leg 5' || inputs.e2e_test_suites == '' }}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-5.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
      vertica-deployment-method: admintools
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-5-vcluster:
    if: ${{ ! github.event.pull_request.head.repo.fork  && (inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'vcluster leg 5' || inputs.e2e_test_suites == '')}}
    needs: [build] 
    uses: ./.github/workflows/e2e-leg-5.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.minimal-vertica-image }}
      vertica-deployment-method: vclusterops
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-leg-6-vcluster:
    if: ${{ ! github.event.pull_request.head.repo.fork  && (inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'vcluster leg 6' || inputs.e2e_test_suites == '')}}
    needs: [build]
    uses: ./.github/workflows/e2e-leg-6.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.full-vertica-image }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-server-upgrade:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools server upgrade' || inputs.e2e_test_suites == '' }}
    needs: [build]
    uses: ./.github/workflows/e2e-server-upgrade.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-operator-upgrade:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools operator upgrade' || inputs.e2e_test_suites == '' }}
    needs: [build] 
    uses: ./.github/workflows/e2e-operator-upgrade.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-udx-admintools:
    if: ${{ inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'admintools udx' || inputs.e2e_test_suites == '' }}
    needs: [build] 
    uses: ./.github/workflows/e2e-udx.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      vertica-image: ${{ needs.build.outputs.legacy-vertica-image }}
      vertica-deployment-method: admintools
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  e2e-udx-vcluster:
    if: ${{ ! github.event.pull_request.head.repo.fork  && (inputs.e2e_test_suites == 'all' || inputs.e2e_test_suites == 'vcluster udx' || inputs.e2e_test_suites == '')}}
    needs: [build] 
    uses: ./.github/workflows/e2e-udx.yml
    with:
      vlogger-image: ${{ needs.build.outputs.vlogger-image }}
      operator-image: ${{ needs.build.outputs.operator-image }}
      # We must pass the full image since the minimal image cannot run Java UDx's
      vertica-image: ${{ needs.build.outputs.full-vertica-image }}
      vertica-deployment-method: vclusterops
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
