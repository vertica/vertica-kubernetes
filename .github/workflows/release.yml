name: Release Operator

on: 
  workflow_dispatch:
    inputs:
      action:
        description: 'What release actions to run?'
        required: true
        type: choice
        options:
        - all
        - upload operator image
        - create github release
        - add helm chart
        - PR for operatorhub OLM catalog
        - PR for openshift OLM catalog
    secrets:
      DOCKERHUB_USERNAME:
        description: 'When working with images from docker.io, this is the username for login purposes'
        required: true
      DOCKERHUB_TOKEN:
        description: 'When working with images from docker.io, this is the password for login purposes'
        required: true
      PAT_TOKEN:
        description: Personal access token to GitHub. Access to repos other than this one.
        required: true

run-name: "Release Action: ${{ inputs.action }}"

env:
  BUILD_IMG: ghcr.io/vertica/verticadb-operator
  PUBLIC_IMG: vertica/verticadb-operator

jobs:

  upload-operator-image:
    if: ${{ inputs.action == 'upload operator image' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set release env vars
      uses: ./.github/actions/set-release-env

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Upload new image
      run: |
        docker pull $BUILD_IMG:$VERSION_SHA
        for tag in $VERSION latest
        do
          docker tag $BUILD_IMG:$VERSION_SHA $PUBLIC_IMG:$tag
          docker push $PUBLIC_IMG:$tag
        done

  create-github-release:
    if: ${{ inputs.action == 'create github release' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set release env vars
      uses: ./.github/actions/set-release-env

    - name: Create the release 
      run: |
        scripts/download-release-artifacts.sh -d ci-artifacts $VERSION
        scripts/create-release.sh -d ci-artifacts $VERSION
      env:
        GH_TOKEN: ${{ github.token }}

  add-helm-chart:
    if: ${{ inputs.action == 'update helm chart' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set release env vars
      uses: ./.github/actions/set-release-env

    - name: Start workflow to add the helm chart for the operator release
      run: |
        curl \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
        --fail \
        https://api.github.com/repos/spilchen/charts/actions/workflows/add-verticadb-chart.yaml/dispatches  \
        -d '{"ref":"main",
             "inputs":{"operator_version":"'"$VERSION"'"}}'

  open-pr-operatorhub:
    if: ${{ inputs.action == 'PR for operatorhub OLM catalog' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: vertica-kubernetes
        fetch-depth: 0

    - name: Set release env vars
      uses: ./vertica-kubernetes/.github/actions/set-release-env
      with:
        path: vertica-kubernetes

    - name: Download the release artifacts
      run: |
        $GITHUB_WORKSPACE/vertica-kubernetes/scripts/download-release-artifacts.sh -d $GITHUB_WORKSPACE/ci-artifacts $VERSION
      env:
        GH_TOKEN: ${{ github.token }}

    - uses: actions/checkout@v3
      with:
        path: olm
        repository: spilchen/community-operators
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}

    - name: Copy olm bundle to github repo
      run: |
        cd $GITHUB_WORKSPACE/olm
        git remote add upstream https://github.com/k8s-operatorhub/community-operators
        git remote -v
        git pull upstream main
        git checkout -b verticadb-operator-$VERSION
        cd operators/verticadb-operator
        mkdir $VERSION
        cp -r $GITHUB_WORKSPACE/ci-artifacts/$VERSION/olm-bundle/* $VERSION/
        git add $VERSION/
        git commit -m "operator verticadb-operator ($VERSION)"
        git push origin verticadb-operator-$VERSION

  open-pr-openshift:
    if: ${{ inputs.action == 'PR for openshift OLM catalog' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

