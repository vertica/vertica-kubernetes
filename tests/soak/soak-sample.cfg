# (c) Copyright [2021-2024] Open Text.
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Sample config file for soak tests. This is passed to the soak-runner.sh to
# configure the random test steps that get created.

# The namespace where the operator is depoyed
operatorNamespace: verticadb-operator
# The number of test steps to generate for each iteration.
stepCount: 20
# Timeout to wait at the end of the iteration for the operator to get to a
# steady state.
steadyStateTimeout: 900
# Weights for each type of step type. A higher number makes the step more likely
# to be chosen.
stepTypeWeight:
  scaling: 10
  killVerticaPod: 10
  killOperatorPod: 2
  sleep: 10
# Identify databases that you want to test against.
databases:
- # Identify the name of the VerticaDB under test
  verticaDBName: verticadb-sample
  namespace: vertica
  # The weight of this database. The higher the weight, the more likely it
  # will be chosen for a test step.
  weight: 1
  # For a test step that will kill vertica pods, this is the miniumum and
  # maximum number of vertica pods to kill.  The actual number is some random
  # value within this range.
  minPodsToKill: 1
  maxPodsToKill: 3
  # For a test step that will sleep, this is the minimum and maximum time in
  # seconds that it will sleep.
  minSleepTime: 30
  maxSleepTime: 180
  # How often, as a percentage, that we will wait for the scaling event to
  # finish to completing in a test step. This is represented as a number between
  # 0 and 100. 100 meaning we will add the assertion to the step each time and 0
  # means we will never add the assertion.
  pctAssertScaling: 80
  # List out all of the subclusters in the database. Include subclusters that
  # you don't want to scale. Otherwise, they will be removed the first time we
  # do a scaling step.
  subclusters:
  - # Scale this subcluster up/down
    name: default-subclusters
    minSize: 3
    maxSize: 6
    type: primary
  - # Another subcluster to scale. This one will be removed entirely if the size
    # picked is 0.
    name: secondary
    minSize: 0
    maxSize: 2
    type: secondary
    removeWhenZero: true
