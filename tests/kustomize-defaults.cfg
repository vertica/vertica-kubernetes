#!/bin/bash

# (c) Copyright [2021-2023] Open Text.
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Config file for when we run and generate kustomize (used in
# setup-kustomize.sh).  This file is always read as the base
# defaults.  The values can be modified by creating your own file and setting
# the KUSTOMIZE_CFG environment variable to point to it.

# We have a set of default images to use in case the image environment
# variables are not set.

# Endpoint and credentials for s3 communal access in the tests.  These defaults
# work for minio that is setup in the `make setup-minio` target.
ENDPOINT=https://minio.kuttl-e2e-s3
ACCESSKEY=minio
SECRETKEY=minio123
REGION=us-east-1

# Credentials for setting up for Azure Blob Storage.
#
# Identify the azure container name.
CONTAINER_NAME=
# Credentials, which can either be the accountKey or the shared access
# signature.  Only one of these need to be set.
ACCOUNT_KEY=
SHARED_ACCESS_SIGNATURE=
# Set these when using a custom endpoint with Azure (e.g. when connecting to
# azurite).  The first one is the host:port combo and the second is either http
# or https.
#
# When using Azurite, the host must be either an IP address or a single word
# hostname.  Attempting to use a multi-part hostname separated with '.' will not
# work.
BLOB_ENDPOINT_HOST=
BLOB_ENDPOINT_PROTOCOL=http

# Communal path components.
#
# For a given testcase name 'tcName', the full path is:
#   ${PATH_PROTOCOL}${BUCKET_OR_CLUSTER}${PATH_PREFIX}tcName
#
# The next set of options allow you to set the different parts of the path.
#
# The protocol to be used when generating the communal path.
#
# Valid values are: s3://, gs://, azb://, /
#
# Using / implies the use of a hostpath.
PATH_PROTOCOL=s3://

# This serves a few different purposes, depending on the scheme:
# - If using s3 or google cloud storage, this is the name of the bucket.
# - If using azure, this is the account name.
# - If using hostpath, this is the directory, relative the root where the
#   hostpath is found. This is a path found on each k8s node.
BUCKET_OR_CLUSTER=nimbusdb

# This is used to place the communal path in a subdirectory.  In order to form
# a valid path, it must always begin and end with a slash.
#
# If using a hostPath to store communal storage in a POSIX path, this is in the
# hostpath mount where communal storage is located.
PATH_PREFIX="/"

# When using hostpath for communal storage, this acts as the subpath within the
# hostmount where the communal storage is to be kept.
COMMUNAL_STORAGE_SUBPATH=

# Location of an existing secret that contains the certificate for use with the
# communal endpoint.  If these are left empty, then no cert is used.  The
# defaults are the name of the secret that is generated when you run:
# `make setup-minio`.
COMMUNAL_EP_CERT_SECRET=communal-ep-cert
COMMUNAL_EP_CERT_NAMESPACE=kuttl-e2e-s3

# Credentials to setup for any image pull secret.
#
# The name of the server that hosts the containers.  For DockerHub use
# https://index.docker.io/v1/.  Once this is set, it is assumed the other three
# variables are set too.
PRIVATE_REG_SERVER=
# The username you use to log into the container registry.
PRIVATE_REG_USERNAME=
# The password that corresponds with the username
PRIVATE_REG_PASSWORD=

# This setting can be used if you want to apply the server mount patch.  This
# adds volumes and volumeMounts to the VerticaDB so that it Vertica binaries
# can be taken from a host path.  This is useful if you are running this
# internally within Vertica and have the server repo cloned and built.
#
# To enable, set this parameter to 1.
USE_SERVER_MOUNT_PATCH=

# When using kind, the default provisioner doesn't allow volume expansion.
# Some tests rely on this, so this knob changes those tests so that it knows
# that volume expansion isn't allowed.  If you are running in a cloud vendor
# such as AWS or GCP, then the default storage class does allow volume
# expansion.  Set this value to 1 for those environments.
ALLOW_VOLUME_EXPANSION=

# The type of deployment to use when running vertica admin commands. Valid
# values are: admintools or vclusterops. Uncomment this or set this environment
# in your shell to control the deployment type.
# VERTICA_DEPLOYMENT_METHOD=

# The name of Vertica superuser generated in database creation. When it is
# not set, default value "dbadmin" will be used. Uncomment this or set this 
# environment in your shell to specify Vertica superuser name.
# VERTICA_SUPERUSER_NAME=