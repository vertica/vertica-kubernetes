# (c) Copyright [2021-2024] Open Text.
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "CREATE TABLE public.test_table (val INTEGER);"
  - script: kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "INSERT INTO public.test_table VALUES (99); COMMIT;"
  - script: |-
      result=$(kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "SELECT * FROM public.test_table ORDER BY val;")
      echo "$result" | grep -Pzo "^99\n$" > /dev/null
      if [ $? -ne 0 ]; then
        echo "Assertion failed: expected 99, got $result"
        exit 1
      fi
  - script: kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "CREATE ARCHIVE db;"
  - script: kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "SAVE RESTORE POINT TO ARCHIVE db;"
  - script: |-
      result=$(kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "SELECT COUNT(*) FROM archive_restore_points;")
      echo "$result" | grep -Pzo "^1\n$" > /dev/null
      if [ $? -ne 0 ]; then
        echo "Assertion failed: expected 1, got $result"
        exit 1
      fi
  - script: kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "INSERT INTO public.test_table VALUES (100); COMMIT;"
  - script: |-
      result=$(kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "SELECT * FROM public.test_table ORDER BY val;")
      echo "$result" | grep -Pzo "^99\n100\n$" > /dev/null
      if [ $? -ne 0 ]; then
        echo "Assertion failed: expected lines containing 99 and 100"
        exit 1
      fi
  - script: kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "SAVE RESTORE POINT TO ARCHIVE db;"
  - script: |-
      result=$(kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "SELECT COUNT(*) FROM archive_restore_points;")
      echo "$result" | grep -Pzo "^2\n$" > /dev/null
      if [ $? -ne 0 ]; then
        echo "Assertion failed: expected 2, got $result"
        exit 1
      fi
  - script: |-
      id=$(kubectl exec -n $NAMESPACE v-create-1-node-sc1-0 -- vsql -w superuser -tAc "SELECT id FROM archive_restore_points WHERE index=2;")

      # Define the text to be inserted
      insert_text=$(cat <<-EOF
      - patch: |-
          - op: replace
            path: /spec/restorePoint/id
            value: $id
        target:
          kind: VerticaDB
      EOF
      )

      # Define the pattern to search for in the file
      search_pattern="replacements:"

      # Insert the text before the line with the specific content
      awk -v insert="$insert_text" -v pattern="$search_pattern" \
      '{
          if ($0 ~ pattern) {
              print insert;
          }
          print $0;
      }' vdb-to-revive-id/overlay/kustomization.yaml > vdb-to-revive-id/overlay/kustomization-new.yaml && mv -f vdb-to-revive-id/overlay/kustomization-new.yaml vdb-to-revive-id/overlay/kustomization.yaml
