# (c) Copyright [2021-2023] Open Text.
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: script-verify-agent-access
data:
  entrypoint.sh: |-
    #!/bin/bash
    set -o errexit
    set -o xtrace

    cd /opt/bitnami
    VDB_NAME=v-shared-svc
    SELECTOR=app.kubernetes.io/name=vertica,app.kubernetes.io/instance=$VDB_NAME
    POD_NAME=$(kubectl get pods --selector=$SELECTOR -o jsonpath="{.items[0].metadata.name}")
    echo $POD_NAME
    
    POD_IP=$(kubectl get po $POD_NAME --no-headers -o custom-columns=":status.podIP")
    
    # Temporary solution only
    # We need to modify this later
    # When the server agent supports ipv6
    if [[ "$POD_IP" != *":"* ]]; then
      DB_NAME=vertdb
      API_KEY=$(kubectl exec $POD_NAME -i -- cat /opt/vertica/config/apikeys.dat | jq -r .[0].apikey)
      SVC_SELECTOR="$SELECTOR,vertica.com/svc-type=external"
      CLUSTER_IP=$(kubectl get svc --selector=$SVC_SELECTOR -o 'jsonpath={.items[0].spec.clusterIP}')
      curl -s --insecure -H "VerticaAPIKey: $API_KEY" -o db.json https://$CLUSTER_IP:5444/databases || :
      cat db.json | jq . -M
      DB_STATUS=$(jq -M -r '[.body[0].name, .body[0].status] | @csv' < db.json)
      EXPECTED_STATUS="\"$DB_NAME\",\"UP\""
      if [[ "$DB_STATUS" != "$EXPECTED_STATUS" ]]; then
        exit 5
      fi
    fi
---
apiVersion: v1
kind: Pod
metadata:
  name: test-verify-agent-access
  labels:
    stern: include
spec:
  restartPolicy: OnFailure
  containers:
    - name: test
      image: bitnami/kubectl:1.20.4
      command: ["/bin/entrypoint.sh"]
      volumeMounts:
        - name: entrypoint-volume
          mountPath: /bin/entrypoint.sh
          readOnly: true
          subPath: entrypoint.sh
  volumes:
    - name: entrypoint-volume
      configMap:
        defaultMode: 0777
        name: script-verify-agent-access
