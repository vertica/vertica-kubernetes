{
    "generatedWith": "parse_prometheus_metrics.py",
    "info": "Recreate by extracting output in kuttl test 'kubectl test --test metrics-no-auth'",
    "metrics": [
        {
            "description": "Number of currently used workers per controller.",
            "name": "controller_runtime_active_workers",
            "type": "gauge"
        },
        {
            "description": "Maximum number of concurrent reconciles per controller.",
            "name": "controller_runtime_max_concurrent_reconciles",
            "type": "gauge"
        },
        {
            "description": "Total number of reconciliation errors per controller.",
            "name": "controller_runtime_reconcile_errors_total",
            "type": "counter"
        },
        {
            "description": "Length of time per reconciliation per controller.",
            "name": "controller_runtime_reconcile_time_seconds",
            "type": "histogram"
        },
        {
            "description": "Total number of reconciliations per controller.",
            "name": "controller_runtime_reconcile_total",
            "type": "counter"
        },
        {
            "description": "Histogram of the latency of processing admission requests.",
            "name": "controller_runtime_webhook_latency_seconds",
            "type": "histogram"
        },
        {
            "description": "Current number of admission requests being served.",
            "name": "controller_runtime_webhook_requests_in_flight",
            "type": "gauge"
        },
        {
            "description": "Total number of admission requests by HTTP status code.",
            "name": "controller_runtime_webhook_requests_total",
            "type": "counter"
        },
        {
            "description": "A summary of the wall-time pause (stop-the-world) duration in garbage collection cycles.",
            "name": "go_gc_duration_seconds",
            "type": "summary"
        },
        {
            "description": "Heap size target percentage configured by the user, otherwise 100. This value is set by the GOGC environment variable, and the runtime/debug.SetGCPercent function. Sourced from /gc/gogc:percent.",
            "name": "go_gc_gogc_percent",
            "type": "gauge"
        },
        {
            "description": "Go runtime memory limit configured by the user, otherwise math.MaxInt64. This value is set by the GOMEMLIMIT environment variable, and the runtime/debug.SetMemoryLimit function. Sourced from /gc/gomemlimit:bytes.",
            "name": "go_gc_gomemlimit_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of goroutines that currently exist.",
            "name": "go_goroutines",
            "type": "gauge"
        },
        {
            "description": "Information about the Go environment.",
            "name": "go_info",
            "type": "gauge"
        },
        {
            "description": "Number of bytes allocated in heap and currently in use. Equals to /memory/classes/heap/objects:bytes.",
            "name": "go_memstats_alloc_bytes",
            "type": "gauge"
        },
        {
            "description": "Total number of bytes allocated in heap until now, even if released already. Equals to /gc/heap/allocs:bytes.",
            "name": "go_memstats_alloc_bytes_total",
            "type": "counter"
        },
        {
            "description": "Number of bytes used by the profiling bucket hash table. Equals to /memory/classes/profiling/buckets:bytes.",
            "name": "go_memstats_buck_hash_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "Total number of heap objects frees. Equals to /gc/heap/frees:objects + /gc/heap/tiny/allocs:objects.",
            "name": "go_memstats_frees_total",
            "type": "counter"
        },
        {
            "description": "Number of bytes used for garbage collection system metadata. Equals to /memory/classes/metadata/other:bytes.",
            "name": "go_memstats_gc_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of heap bytes allocated and currently in use, same as go_memstats_alloc_bytes. Equals to /memory/classes/heap/objects:bytes.",
            "name": "go_memstats_heap_alloc_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of heap bytes waiting to be used. Equals to /memory/classes/heap/released:bytes + /memory/classes/heap/free:bytes.",
            "name": "go_memstats_heap_idle_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of heap bytes that are in use. Equals to /memory/classes/heap/objects:bytes + /memory/classes/heap/unused:bytes.",
            "name": "go_memstats_heap_inuse_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of currently allocated objects. Equals to /gc/heap/objects:objects.",
            "name": "go_memstats_heap_objects",
            "type": "gauge"
        },
        {
            "description": "Number of heap bytes released to OS. Equals to /memory/classes/heap/released:bytes.",
            "name": "go_memstats_heap_released_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of heap bytes obtained from system. Equals to /memory/classes/heap/objects:bytes + /memory/classes/heap/unused:bytes + /memory/classes/heap/released:bytes + /memory/classes/heap/free:bytes.",
            "name": "go_memstats_heap_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of seconds since 1970 of last garbage collection.",
            "name": "go_memstats_last_gc_time_seconds",
            "type": "gauge"
        },
        {
            "description": "Total number of heap objects allocated, both live and gc-ed. Semantically a counter version for go_memstats_heap_objects gauge. Equals to /gc/heap/allocs:objects + /gc/heap/tiny/allocs:objects.",
            "name": "go_memstats_mallocs_total",
            "type": "counter"
        },
        {
            "description": "Number of bytes in use by mcache structures. Equals to /memory/classes/metadata/mcache/inuse:bytes.",
            "name": "go_memstats_mcache_inuse_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of bytes used for mcache structures obtained from system. Equals to /memory/classes/metadata/mcache/inuse:bytes + /memory/classes/metadata/mcache/free:bytes.",
            "name": "go_memstats_mcache_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of bytes in use by mspan structures. Equals to /memory/classes/metadata/mspan/inuse:bytes.",
            "name": "go_memstats_mspan_inuse_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of bytes used for mspan structures obtained from system. Equals to /memory/classes/metadata/mspan/inuse:bytes + /memory/classes/metadata/mspan/free:bytes.",
            "name": "go_memstats_mspan_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of heap bytes when next garbage collection will take place. Equals to /gc/heap/goal:bytes.",
            "name": "go_memstats_next_gc_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of bytes used for other system allocations. Equals to /memory/classes/other:bytes.",
            "name": "go_memstats_other_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of bytes obtained from system for stack allocator in non-CGO environments. Equals to /memory/classes/heap/stacks:bytes.",
            "name": "go_memstats_stack_inuse_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of bytes obtained from system for stack allocator. Equals to /memory/classes/heap/stacks:bytes + /memory/classes/os-stacks:bytes.",
            "name": "go_memstats_stack_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "Number of bytes obtained from system. Equals to /memory/classes/total:byte.",
            "name": "go_memstats_sys_bytes",
            "type": "gauge"
        },
        {
            "description": "The current runtime.GOMAXPROCS setting, or the number of operating system threads that can execute user-level Go code simultaneously. Sourced from /sched/gomaxprocs:threads.",
            "name": "go_sched_gomaxprocs_threads",
            "type": "gauge"
        },
        {
            "description": "Number of OS threads created.",
            "name": "go_threads",
            "type": "gauge"
        },
        {
            "description": "Total user and system CPU time spent in seconds.",
            "name": "process_cpu_seconds_total",
            "type": "counter"
        },
        {
            "description": "Maximum number of open file descriptors.",
            "name": "process_max_fds",
            "type": "gauge"
        },
        {
            "description": "Number of bytes received by the process over the network.",
            "name": "process_network_receive_bytes_total",
            "type": "counter"
        },
        {
            "description": "Number of bytes sent by the process over the network.",
            "name": "process_network_transmit_bytes_total",
            "type": "counter"
        },
        {
            "description": "Number of open file descriptors.",
            "name": "process_open_fds",
            "type": "gauge"
        },
        {
            "description": "Resident memory size in bytes.",
            "name": "process_resident_memory_bytes",
            "type": "gauge"
        },
        {
            "description": "Start time of the process since unix epoch in seconds.",
            "name": "process_start_time_seconds",
            "type": "gauge"
        },
        {
            "description": "Virtual memory size in bytes.",
            "name": "process_virtual_memory_bytes",
            "type": "gauge"
        },
        {
            "description": "Maximum amount of virtual memory available in bytes.",
            "name": "process_virtual_memory_max_bytes",
            "type": "gauge"
        },
        {
            "description": "The number of times we attempted a full cluster restart.",
            "name": "vertica_cluster_restart_attempted_total",
            "type": "counter"
        },
        {
            "description": "The number of times we failed when attempting a full cluster restart.",
            "name": "vertica_cluster_restart_failed_total",
            "type": "counter"
        },
        {
            "description": "The number of seconds it took to do a full cluster restart.",
            "name": "vertica_cluster_restart_seconds",
            "type": "histogram"
        },
        {
            "description": "The number of times we attempted to restart down nodes.",
            "name": "vertica_nodes_restart_attempted_total",
            "type": "counter"
        },
        {
            "description": "The number of times we failed when trying to restart down nodes.",
            "name": "vertica_nodes_restart_failed_total",
            "type": "counter"
        },
        {
            "description": "The number of seconds it took to restart down nodes.",
            "name": "vertica_nodes_restart_seconds",
            "type": "histogram"
        },
        {
            "description": "The number of nodes that have a running pod associated with it.",
            "name": "vertica_running_nodes_count",
            "type": "gauge"
        },
        {
            "description": "The number of subclusters that exist.",
            "name": "vertica_subclusters_count",
            "type": "gauge"
        },
        {
            "description": "The number of nodes that currently exist.",
            "name": "vertica_total_nodes_count",
            "type": "gauge"
        },
        {
            "description": "The number of nodes that have vertica running and can accept connections.",
            "name": "vertica_up_nodes_count",
            "type": "gauge"
        },
        {
            "description": "The number of times the operator performed an upgrade caused by an image change.",
            "name": "vertica_upgrade_total",
            "type": "counter"
        },
        {
            "description": "Total number of adds handled by workqueue.",
            "name": "workqueue_adds_total",
            "type": "counter"
        },
        {
            "description": "Current depth of workqueue.",
            "name": "workqueue_depth",
            "type": "gauge"
        },
        {
            "description": "How many seconds has the longest running processor for workqueue been running.",
            "name": "workqueue_longest_running_processor_seconds",
            "type": "gauge"
        },
        {
            "description": "How long in seconds an item stays in workqueue before being requested.",
            "name": "workqueue_queue_duration_seconds",
            "type": "histogram"
        },
        {
            "description": "Total number of retries handled by workqueue.",
            "name": "workqueue_retries_total",
            "type": "counter"
        },
        {
            "description": "How many seconds of work has been done that is in progress and hasn't been observed by work_duration. Large values indicate stuck threads. One can deduce the number of stuck threads by observing the rate at which this increases.",
            "name": "workqueue_unfinished_work_seconds",
            "type": "gauge"
        },
        {
            "description": "How long in seconds processing an item from workqueue takes.",
            "name": "workqueue_work_duration_seconds",
            "type": "histogram"
        }
    ]
}
